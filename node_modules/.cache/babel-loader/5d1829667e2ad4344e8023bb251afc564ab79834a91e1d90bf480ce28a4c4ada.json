{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AnimatedBackground=()=>{const canvasRef=useRef(null);useEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');let animationFrameId;let shapes=[];let waves=[];const resizeCanvas=()=>{canvas.width=window.innerWidth;canvas.height=window.innerHeight;};resizeCanvas();window.addEventListener('resize',resizeCanvas);class GeometricShape{constructor(){this.x=Math.random()*canvas.width;this.y=Math.random()*canvas.height;this.size=Math.random()*60+20;this.rotation=Math.random()*Math.PI*2;this.rotationSpeed=(Math.random()-0.5)*0.005;this.speedX=(Math.random()-0.5)*0.3;this.speedY=(Math.random()-0.5)*0.3;this.opacity=Math.random()*0.15+0.05;this.type=Math.floor(Math.random()*3);this.pulsePhase=Math.random()*Math.PI*2;this.pulseSpeed=0.01;this.color=Math.random()>0.5?'154, 124, 64':'33, 54, 81';}update(){this.x+=this.speedX;this.y+=this.speedY;this.rotation+=this.rotationSpeed;this.pulsePhase+=this.pulseSpeed;if(this.x>canvas.width+this.size)this.x=-this.size;if(this.x<-this.size)this.x=canvas.width+this.size;if(this.y>canvas.height+this.size)this.y=-this.size;if(this.y<-this.size)this.y=canvas.height+this.size;}draw(){ctx.save();ctx.translate(this.x,this.y);ctx.rotate(this.rotation);const pulseFactor=1+Math.sin(this.pulsePhase)*0.1;const currentSize=this.size*pulseFactor;ctx.fillStyle=`rgba(${this.color}, ${this.opacity})`;ctx.strokeStyle=`rgba(255, 255, 255, ${this.opacity*0.3})`;ctx.lineWidth=1;ctx.beginPath();switch(this.type){case 0:ctx.moveTo(0,-currentSize/2);ctx.lineTo(-currentSize/2,currentSize/2);ctx.lineTo(currentSize/2,currentSize/2);ctx.closePath();break;case 1:ctx.rect(-currentSize/2,-currentSize/2,currentSize,currentSize);break;case 2:const sides=6;const step=Math.PI*2/sides;ctx.moveTo(currentSize/2,0);for(let i=1;i<=sides;i++){ctx.lineTo(currentSize/2*Math.cos(i*step),currentSize/2*Math.sin(i*step));}ctx.closePath();break;}ctx.fill();ctx.stroke();ctx.restore();}}class Wave{constructor(y,amplitude,frequency,speed,color){this.baseY=y;this.amplitude=amplitude;this.frequency=frequency;this.speed=speed;this.color=color;this.offset=0;}update(){this.offset+=this.speed;}draw(){ctx.beginPath();ctx.moveTo(0,canvas.height);for(let x=0;x<=canvas.width;x+=5){const y=this.baseY+Math.sin(x*this.frequency+this.offset)*this.amplitude;ctx.lineTo(x,y);}ctx.lineTo(canvas.width,canvas.height);ctx.closePath();const gradient=ctx.createLinearGradient(0,0,0,canvas.height);gradient.addColorStop(0,this.color);gradient.addColorStop(1,'rgba(33, 54, 81, 0)');ctx.fillStyle=gradient;ctx.fill();}}class GridLines{constructor(){this.spacing=100;this.opacity=0.03;this.offset=0;this.speed=0.2;}update(){this.offset+=this.speed;if(this.offset>=this.spacing)this.offset=0;}draw(){ctx.strokeStyle=`rgba(154, 124, 64, ${this.opacity})`;ctx.lineWidth=0.5;for(let x=-this.offset;x<=canvas.width+this.spacing;x+=this.spacing){ctx.beginPath();ctx.moveTo(x,0);ctx.lineTo(x,canvas.height);ctx.stroke();}for(let y=-this.offset;y<=canvas.height+this.spacing;y+=this.spacing){ctx.beginPath();ctx.moveTo(0,y);ctx.lineTo(canvas.width,y);ctx.stroke();}}}const createShapes=()=>{shapes=[];const numberOfShapes=Math.floor(canvas.width*canvas.height/50000);for(let i=0;i<numberOfShapes;i++){shapes.push(new GeometricShape());}};const createWaves=()=>{waves=[new Wave(canvas.height*0.7,30,0.01,0.02,'rgba(154, 124, 64, 0.08)'),new Wave(canvas.height*0.8,20,0.015,-0.015,'rgba(255, 255, 255, 0.05)'),new Wave(canvas.height*0.9,15,0.02,0.01,'rgba(154, 124, 64, 0.06)')];};createShapes();createWaves();const grid=new GridLines();const animate=()=>{const gradient=ctx.createRadialGradient(canvas.width/2,canvas.height/2,0,canvas.width/2,canvas.height/2,canvas.width);gradient.addColorStop(0,'rgba(154, 124, 64, 0.02)');gradient.addColorStop(1,'rgba(33, 54, 81, 0.05)');ctx.fillStyle=gradient;ctx.fillRect(0,0,canvas.width,canvas.height);grid.update();grid.draw();waves.forEach(wave=>{wave.update();wave.draw();});shapes.forEach(shape=>{shape.update();shape.draw();});if(Math.random()>0.95){ctx.fillStyle=`rgba(255, 255, 255, ${Math.random()*0.02})`;ctx.fillRect(Math.random()*canvas.width,Math.random()*canvas.height,Math.random()*2,Math.random()*2);}animationFrameId=requestAnimationFrame(animate);};animate();const handleResize=()=>{createShapes();createWaves();};window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('resize',resizeCanvas);window.removeEventListener('resize',handleResize);cancelAnimationFrame(animationFrameId);};},[]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"fixed inset-0 pointer-events-none z-0\",style:{background:'transparent'}});};export default AnimatedBackground;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","AnimatedBackground","canvasRef","canvas","current","ctx","getContext","animationFrameId","shapes","waves","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","GeometricShape","constructor","x","Math","random","y","size","rotation","PI","rotationSpeed","speedX","speedY","opacity","type","floor","pulsePhase","pulseSpeed","color","update","draw","save","translate","rotate","pulseFactor","sin","currentSize","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","rect","sides","step","i","cos","fill","stroke","restore","Wave","amplitude","frequency","speed","baseY","offset","gradient","createLinearGradient","addColorStop","GridLines","spacing","createShapes","numberOfShapes","push","createWaves","grid","animate","createRadialGradient","fillRect","forEach","wave","shape","requestAnimationFrame","handleResize","removeEventListener","cancelAnimationFrame","ref","className","style","background"],"sources":["/workspaces/stratscale-fixed/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst AnimatedBackground = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let shapes = [];\n    let waves = [];\n\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    class GeometricShape {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 60 + 20;\n        this.rotation = Math.random() * Math.PI * 2;\n        this.rotationSpeed = (Math.random() - 0.5) * 0.005;\n        this.speedX = (Math.random() - 0.5) * 0.3;\n        this.speedY = (Math.random() - 0.5) * 0.3;\n        this.opacity = Math.random() * 0.15 + 0.05;\n        this.type = Math.floor(Math.random() * 3);\n        this.pulsePhase = Math.random() * Math.PI * 2;\n        this.pulseSpeed = 0.01;\n        this.color = Math.random() > 0.5 ? '154, 124, 64' : '33, 54, 81';\n      }\n\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        this.rotation += this.rotationSpeed;\n        this.pulsePhase += this.pulseSpeed;\n\n        if (this.x > canvas.width + this.size) this.x = -this.size;\n        if (this.x < -this.size) this.x = canvas.width + this.size;\n        if (this.y > canvas.height + this.size) this.y = -this.size;\n        if (this.y < -this.size) this.y = canvas.height + this.size;\n      }\n\n      draw() {\n        ctx.save();\n        ctx.translate(this.x, this.y);\n        ctx.rotate(this.rotation);\n        \n        const pulseFactor = 1 + Math.sin(this.pulsePhase) * 0.1;\n        const currentSize = this.size * pulseFactor;\n\n        ctx.fillStyle = `rgba(${this.color}, ${this.opacity})`;\n        ctx.strokeStyle = `rgba(255, 255, 255, ${this.opacity * 0.3})`;\n        ctx.lineWidth = 1;\n\n        ctx.beginPath();\n        \n        switch (this.type) {\n          case 0:\n            ctx.moveTo(0, -currentSize / 2);\n            ctx.lineTo(-currentSize / 2, currentSize / 2);\n            ctx.lineTo(currentSize / 2, currentSize / 2);\n            ctx.closePath();\n            break;\n          case 1:\n            ctx.rect(-currentSize / 2, -currentSize / 2, currentSize, currentSize);\n            break;\n          case 2:\n            const sides = 6;\n            const step = (Math.PI * 2) / sides;\n            ctx.moveTo(currentSize / 2, 0);\n            for (let i = 1; i <= sides; i++) {\n              ctx.lineTo(\n                (currentSize / 2) * Math.cos(i * step),\n                (currentSize / 2) * Math.sin(i * step)\n              );\n            }\n            ctx.closePath();\n            break;\n        }\n        \n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n\n    class Wave {\n      constructor(y, amplitude, frequency, speed, color) {\n        this.baseY = y;\n        this.amplitude = amplitude;\n        this.frequency = frequency;\n        this.speed = speed;\n        this.color = color;\n        this.offset = 0;\n      }\n\n      update() {\n        this.offset += this.speed;\n      }\n\n      draw() {\n        ctx.beginPath();\n        ctx.moveTo(0, canvas.height);\n        \n        for (let x = 0; x <= canvas.width; x += 5) {\n          const y = this.baseY + Math.sin((x * this.frequency + this.offset)) * this.amplitude;\n          ctx.lineTo(x, y);\n        }\n        \n        ctx.lineTo(canvas.width, canvas.height);\n        ctx.closePath();\n        \n        const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n        gradient.addColorStop(0, this.color);\n        gradient.addColorStop(1, 'rgba(33, 54, 81, 0)');\n        \n        ctx.fillStyle = gradient;\n        ctx.fill();\n      }\n    }\n\n    class GridLines {\n      constructor() {\n        this.spacing = 100;\n        this.opacity = 0.03;\n        this.offset = 0;\n        this.speed = 0.2;\n      }\n\n      update() {\n        this.offset += this.speed;\n        if (this.offset >= this.spacing) this.offset = 0;\n      }\n\n      draw() {\n        ctx.strokeStyle = `rgba(154, 124, 64, ${this.opacity})`;\n        ctx.lineWidth = 0.5;\n        \n        for (let x = -this.offset; x <= canvas.width + this.spacing; x += this.spacing) {\n          ctx.beginPath();\n          ctx.moveTo(x, 0);\n          ctx.lineTo(x, canvas.height);\n          ctx.stroke();\n        }\n        \n        for (let y = -this.offset; y <= canvas.height + this.spacing; y += this.spacing) {\n          ctx.beginPath();\n          ctx.moveTo(0, y);\n          ctx.lineTo(canvas.width, y);\n          ctx.stroke();\n        }\n      }\n    }\n\n    const createShapes = () => {\n      shapes = [];\n      const numberOfShapes = Math.floor((canvas.width * canvas.height) / 50000);\n      for (let i = 0; i < numberOfShapes; i++) {\n        shapes.push(new GeometricShape());\n      }\n    };\n\n    const createWaves = () => {\n      waves = [\n        new Wave(canvas.height * 0.7, 30, 0.01, 0.02, 'rgba(154, 124, 64, 0.08)'),\n        new Wave(canvas.height * 0.8, 20, 0.015, -0.015, 'rgba(255, 255, 255, 0.05)'),\n        new Wave(canvas.height * 0.9, 15, 0.02, 0.01, 'rgba(154, 124, 64, 0.06)')\n      ];\n    };\n\n    createShapes();\n    createWaves();\n    const grid = new GridLines();\n\n    const animate = () => {\n      const gradient = ctx.createRadialGradient(\n        canvas.width / 2, canvas.height / 2, 0,\n        canvas.width / 2, canvas.height / 2, canvas.width\n      );\n      gradient.addColorStop(0, 'rgba(154, 124, 64, 0.02)');\n      gradient.addColorStop(1, 'rgba(33, 54, 81, 0.05)');\n      \n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      grid.update();\n      grid.draw();\n\n      waves.forEach(wave => {\n        wave.update();\n        wave.draw();\n      });\n\n      shapes.forEach(shape => {\n        shape.update();\n        shape.draw();\n      });\n\n      if (Math.random() > 0.95) {\n        ctx.fillStyle = `rgba(255, 255, 255, ${Math.random() * 0.02})`;\n        ctx.fillRect(\n          Math.random() * canvas.width,\n          Math.random() * canvas.height,\n          Math.random() * 2,\n          Math.random() * 2\n        );\n      }\n\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    const handleResize = () => {\n      createShapes();\n      createWaves();\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed inset-0 pointer-events-none z-0\"\n      style={{ background: 'transparent' }}\n    />\n  );\n};\n\nexport default AnimatedBackground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}